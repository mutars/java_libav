package com.mutar.libav.bridge.avfilter;
import com.mutar.libav.bridge.avfilter.AvfilterLibrary.AVFilterChannelLayouts;
import com.mutar.libav.bridge.avfilter.AvfilterLibrary.AVFilterFormats;
import com.mutar.libav.bridge.avfilter.AvfilterLibrary.AVFilterPad;
import com.mutar.libav.bridge.avutil.AVFrame;
import com.mutar.libav.bridge.avutil.AVRational;
import com.mutar.libav.bridge.avutil.AvutilLibrary.AVMediaType;
import java.util.Collections;
import java.util.Iterator;
import org.bridj.BridJ;
import org.bridj.FlagSet;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * A link between two filters. This contains pointers to the source and<br>
 * destination filters between which this link exists, and the indexes of<br>
 * the pads involved. In addition, this link also contains the parameters<br>
 * which have been negotiated and agreed upon between the filter, such as<br>
 * image dimensions, format, etc.<br>
 * <i>native declaration : ffmpeg_build/include/libavfilter/avfilter.h:169</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("avfilter") 
public class AVFilterLink extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * < source filter<br>
	 * C type : AVFilterContext*
	 */
	@Field(0) 
	public Pointer<AVFilterContext > src() {
		return this.io.getPointerField(this, 0);
	}
	/**
	 * < source filter<br>
	 * C type : AVFilterContext*
	 */
	@Field(0) 
	public AVFilterLink src(Pointer<AVFilterContext > src) {
		this.io.setPointerField(this, 0, src);
		return this;
	}
	/**
	 * < output pad on the source filter<br>
	 * C type : AVFilterPad*
	 */
	@Field(1) 
	public Pointer<AVFilterPad > srcpad() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * < output pad on the source filter<br>
	 * C type : AVFilterPad*
	 */
	@Field(1) 
	public AVFilterLink srcpad(Pointer<AVFilterPad > srcpad) {
		this.io.setPointerField(this, 1, srcpad);
		return this;
	}
	/**
	 * < dest filter<br>
	 * C type : AVFilterContext*
	 */
	@Field(2) 
	public Pointer<AVFilterContext > dst() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * < dest filter<br>
	 * C type : AVFilterContext*
	 */
	@Field(2) 
	public AVFilterLink dst(Pointer<AVFilterContext > dst) {
		this.io.setPointerField(this, 2, dst);
		return this;
	}
	/**
	 * < input pad on the dest filter<br>
	 * C type : AVFilterPad*
	 */
	@Field(3) 
	public Pointer<AVFilterPad > dstpad() {
		return this.io.getPointerField(this, 3);
	}
	/**
	 * < input pad on the dest filter<br>
	 * C type : AVFilterPad*
	 */
	@Field(3) 
	public AVFilterLink dstpad(Pointer<AVFilterPad > dstpad) {
		this.io.setPointerField(this, 3, dstpad);
		return this;
	}
	/**
	 * < filter media type<br>
	 * C type : AVMediaType
	 */
	@Field(4) 
	public IntValuedEnum<AVMediaType > type() {
		return this.io.getEnumField(this, 4);
	}
	/**
	 * < filter media type<br>
	 * C type : AVMediaType
	 */
	@Field(4) 
	public AVFilterLink type(IntValuedEnum<AVMediaType > type) {
		this.io.setEnumField(this, 4, type);
		return this;
	}
	/** < agreed upon image width */
	@Field(5) 
	public int w() {
		return this.io.getIntField(this, 5);
	}
	/** < agreed upon image width */
	@Field(5) 
	public AVFilterLink w(int w) {
		this.io.setIntField(this, 5, w);
		return this;
	}
	/** < agreed upon image height */
	@Field(6) 
	public int h() {
		return this.io.getIntField(this, 6);
	}
	/** < agreed upon image height */
	@Field(6) 
	public AVFilterLink h(int h) {
		this.io.setIntField(this, 6, h);
		return this;
	}
	/**
	 * < agreed upon sample aspect ratio<br>
	 * C type : AVRational
	 */
	@Field(7) 
	public AVRational sample_aspect_ratio() {
		return this.io.getNativeObjectField(this, 7);
	}
	/**
	 * < agreed upon sample aspect ratio<br>
	 * C type : AVRational
	 */
	@Field(7) 
	public AVFilterLink sample_aspect_ratio(AVRational sample_aspect_ratio) {
		this.io.setNativeObjectField(this, 7, sample_aspect_ratio);
		return this;
	}
	/** < channel layout of current buffer (see libavutil/channel_layout.h) */
	@Field(8) 
	public long channel_layout() {
		return this.io.getLongField(this, 8);
	}
	/** < channel layout of current buffer (see libavutil/channel_layout.h) */
	@Field(8) 
	public AVFilterLink channel_layout(long channel_layout) {
		this.io.setLongField(this, 8, channel_layout);
		return this;
	}
	/** < samples per second */
	@Field(9) 
	public int sample_rate() {
		return this.io.getIntField(this, 9);
	}
	/** < samples per second */
	@Field(9) 
	public AVFilterLink sample_rate(int sample_rate) {
		this.io.setIntField(this, 9, sample_rate);
		return this;
	}
	/** < agreed upon media format */
	@Field(10) 
	public int format() {
		return this.io.getIntField(this, 10);
	}
	/** < agreed upon media format */
	@Field(10) 
	public AVFilterLink format(int format) {
		this.io.setIntField(this, 10, format);
		return this;
	}
	/** C type : AVRational */
	@Field(11) 
	public AVRational time_base() {
		return this.io.getNativeObjectField(this, 11);
	}
	/** C type : AVRational */
	@Field(11) 
	public AVFilterLink time_base(AVRational time_base) {
		this.io.setNativeObjectField(this, 11, time_base);
		return this;
	}
	/** C type : AVFilterFormats* */
	@Field(12) 
	public Pointer<AVFilterFormats > in_formats() {
		return this.io.getPointerField(this, 12);
	}
	/** C type : AVFilterFormats* */
	@Field(12) 
	public AVFilterLink in_formats(Pointer<AVFilterFormats > in_formats) {
		this.io.setPointerField(this, 12, in_formats);
		return this;
	}
	/** C type : AVFilterFormats* */
	@Field(13) 
	public Pointer<AVFilterFormats > out_formats() {
		return this.io.getPointerField(this, 13);
	}
	/** C type : AVFilterFormats* */
	@Field(13) 
	public AVFilterLink out_formats(Pointer<AVFilterFormats > out_formats) {
		this.io.setPointerField(this, 13, out_formats);
		return this;
	}
	/** C type : AVFilterFormats* */
	@Field(14) 
	public Pointer<AVFilterFormats > in_samplerates() {
		return this.io.getPointerField(this, 14);
	}
	/** C type : AVFilterFormats* */
	@Field(14) 
	public AVFilterLink in_samplerates(Pointer<AVFilterFormats > in_samplerates) {
		this.io.setPointerField(this, 14, in_samplerates);
		return this;
	}
	/** C type : AVFilterFormats* */
	@Field(15) 
	public Pointer<AVFilterFormats > out_samplerates() {
		return this.io.getPointerField(this, 15);
	}
	/** C type : AVFilterFormats* */
	@Field(15) 
	public AVFilterLink out_samplerates(Pointer<AVFilterFormats > out_samplerates) {
		this.io.setPointerField(this, 15, out_samplerates);
		return this;
	}
	/** C type : AVFilterChannelLayouts* */
	@Field(16) 
	public Pointer<AVFilterChannelLayouts > in_channel_layouts() {
		return this.io.getPointerField(this, 16);
	}
	/** C type : AVFilterChannelLayouts* */
	@Field(16) 
	public AVFilterLink in_channel_layouts(Pointer<AVFilterChannelLayouts > in_channel_layouts) {
		this.io.setPointerField(this, 16, in_channel_layouts);
		return this;
	}
	/** C type : AVFilterChannelLayouts* */
	@Field(17) 
	public Pointer<AVFilterChannelLayouts > out_channel_layouts() {
		return this.io.getPointerField(this, 17);
	}
	/** C type : AVFilterChannelLayouts* */
	@Field(17) 
	public AVFilterLink out_channel_layouts(Pointer<AVFilterChannelLayouts > out_channel_layouts) {
		this.io.setPointerField(this, 17, out_channel_layouts);
		return this;
	}
	@Field(18) 
	public int request_samples() {
		return this.io.getIntField(this, 18);
	}
	@Field(18) 
	public AVFilterLink request_samples(int request_samples) {
		this.io.setIntField(this, 18, request_samples);
		return this;
	}
	/** C type : init_state_enum */
	@Field(19) 
	public IntValuedEnum<AVFilterLink.init_state_enum > init_state() {
		return this.io.getEnumField(this, 19);
	}
	/** C type : init_state_enum */
	@Field(19) 
	public AVFilterLink init_state(IntValuedEnum<AVFilterLink.init_state_enum > init_state) {
		this.io.setEnumField(this, 19, init_state);
		return this;
	}
	/** C type : AVFilterGraph* */
	@Field(20) 
	public Pointer<AVFilterGraph > graph() {
		return this.io.getPointerField(this, 20);
	}
	/** C type : AVFilterGraph* */
	@Field(20) 
	public AVFilterLink graph(Pointer<AVFilterGraph > graph) {
		this.io.setPointerField(this, 20, graph);
		return this;
	}
	@Field(21) 
	public long current_pts() {
		return this.io.getLongField(this, 21);
	}
	@Field(21) 
	public AVFilterLink current_pts(long current_pts) {
		this.io.setLongField(this, 21, current_pts);
		return this;
	}
	@Field(22) 
	public int age_index() {
		return this.io.getIntField(this, 22);
	}
	@Field(22) 
	public AVFilterLink age_index(int age_index) {
		this.io.setIntField(this, 22, age_index);
		return this;
	}
	/** C type : AVRational */
	@Field(23) 
	public AVRational frame_rate() {
		return this.io.getNativeObjectField(this, 23);
	}
	/** C type : AVRational */
	@Field(23) 
	public AVFilterLink frame_rate(AVRational frame_rate) {
		this.io.setNativeObjectField(this, 23, frame_rate);
		return this;
	}
	/** C type : AVFrame* */
	@Field(24) 
	public Pointer<AVFrame > partial_buf() {
		return this.io.getPointerField(this, 24);
	}
	/** C type : AVFrame* */
	@Field(24) 
	public AVFilterLink partial_buf(Pointer<AVFrame > partial_buf) {
		this.io.setPointerField(this, 24, partial_buf);
		return this;
	}
	@Field(25) 
	public int partial_buf_size() {
		return this.io.getIntField(this, 25);
	}
	@Field(25) 
	public AVFilterLink partial_buf_size(int partial_buf_size) {
		this.io.setIntField(this, 25, partial_buf_size);
		return this;
	}
	@Field(26) 
	public int min_samples() {
		return this.io.getIntField(this, 26);
	}
	@Field(26) 
	public AVFilterLink min_samples(int min_samples) {
		this.io.setIntField(this, 26, min_samples);
		return this;
	}
	@Field(27) 
	public int max_samples() {
		return this.io.getIntField(this, 27);
	}
	@Field(27) 
	public AVFilterLink max_samples(int max_samples) {
		this.io.setIntField(this, 27, max_samples);
		return this;
	}
	@Field(28) 
	public int closed() {
		return this.io.getIntField(this, 28);
	}
	@Field(28) 
	public AVFilterLink closed(int closed) {
		this.io.setIntField(this, 28, closed);
		return this;
	}
	@Field(29) 
	public int channels() {
		return this.io.getIntField(this, 29);
	}
	@Field(29) 
	public AVFilterLink channels(int channels) {
		this.io.setIntField(this, 29, channels);
		return this;
	}
	@Field(30) 
	public int flags() {
		return this.io.getIntField(this, 30);
	}
	@Field(30) 
	public AVFilterLink flags(int flags) {
		this.io.setIntField(this, 30, flags);
		return this;
	}
	@Field(31) 
	public long frame_count() {
		return this.io.getLongField(this, 31);
	}
	@Field(31) 
	public AVFilterLink frame_count(long frame_count) {
		this.io.setLongField(this, 31, frame_count);
		return this;
	}
	/**
	 * enum values<br>
	 * <i>native declaration : ffmpeg_build/include/libavfilter/avfilter.h:168</i>
	 */
	public enum init_state_enum implements IntValuedEnum<init_state_enum > {
		/** < not started */
		AVLINK_UNINIT(0),
		/** < started, but incomplete */
		AVLINK_STARTINIT(1),
		/** < complete */
		AVLINK_INIT(2);
		init_state_enum(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<init_state_enum > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<init_state_enum > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	public AVFilterLink() {
		super();
	}
	public AVFilterLink(Pointer pointer) {
		super(pointer);
	}
}
