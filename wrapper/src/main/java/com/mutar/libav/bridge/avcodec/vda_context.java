package com.mutar.libav.bridge.avcodec;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * This structure is used to provide the necessary configurations and data<br>
 * to the VDA FFmpeg HWAccel implementation.<br>
 * The application must make it available as AVCodecContext.hwaccel_context.<br>
 * <i>native declaration : ffmpeg_build/include/libavcodec/vda.h:22</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("avcodec") 
public abstract class vda_context extends StructObject {
	static {
		BridJ.register();
	}
	/** Conversion Error : VDADecoder (failed to convert type to Java (undefined type)) */
	/** Conversion Error : CVPixelBufferRef (failed to convert type to Java (undefined type)) */
	@Field(2) 
	public int use_sync_decoding() {
		return this.io.getIntField(this, 2);
	}
	@Field(2) 
	public vda_context use_sync_decoding(int use_sync_decoding) {
		this.io.setIntField(this, 2, use_sync_decoding);
		return this;
	}
	@Field(3) 
	public int width() {
		return this.io.getIntField(this, 3);
	}
	@Field(3) 
	public vda_context width(int width) {
		this.io.setIntField(this, 3, width);
		return this;
	}
	@Field(4) 
	public int height() {
		return this.io.getIntField(this, 4);
	}
	@Field(4) 
	public vda_context height(int height) {
		this.io.setIntField(this, 4, height);
		return this;
	}
	@Field(5) 
	public int format() {
		return this.io.getIntField(this, 5);
	}
	@Field(5) 
	public vda_context format(int format) {
		this.io.setIntField(this, 5, format);
		return this;
	}
	/** Conversion Error : OSType (failed to convert type to Java (undefined type)) */
	/** C type : uint8_t* */
	@Field(7) 
	public Pointer<Byte > priv_bitstream() {
		return this.io.getPointerField(this, 7);
	}
	/** C type : uint8_t* */
	@Field(7) 
	public vda_context priv_bitstream(Pointer<Byte > priv_bitstream) {
		this.io.setPointerField(this, 7, priv_bitstream);
		return this;
	}
	@Field(8) 
	public int priv_bitstream_size() {
		return this.io.getIntField(this, 8);
	}
	@Field(8) 
	public vda_context priv_bitstream_size(int priv_bitstream_size) {
		this.io.setIntField(this, 8, priv_bitstream_size);
		return this;
	}
	@Field(9) 
	public int priv_allocated_size() {
		return this.io.getIntField(this, 9);
	}
	@Field(9) 
	public vda_context priv_allocated_size(int priv_allocated_size) {
		this.io.setIntField(this, 9, priv_allocated_size);
		return this;
	}
	@Field(10) 
	public int use_ref_buffer() {
		return this.io.getIntField(this, 10);
	}
	@Field(10) 
	public vda_context use_ref_buffer(int use_ref_buffer) {
		this.io.setIntField(this, 10, use_ref_buffer);
		return this;
	}
}
