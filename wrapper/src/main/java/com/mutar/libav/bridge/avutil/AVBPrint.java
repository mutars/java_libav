package com.mutar.libav.bridge.avutil;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : ffmpeg_build/include/libavutil/bprint.h:45</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("avutil")
public class AVBPrint extends StructObject {
    static {
        BridJ.register();
    }
    /** C type : char* */
    @Field(0)
    public Pointer<Byte > str() {
        return this.io.getPointerField(this, 0);
    }
    /** C type : char* */
    @Field(0)
    public AVBPrint str(Pointer<Byte > str) {
        this.io.setPointerField(this, 0, str);
        return this;
    }
    @Field(1)
    public int len() {
        return this.io.getIntField(this, 1);
    }
    @Field(1)
    public AVBPrint len(int len) {
        this.io.setIntField(this, 1, len);
        return this;
    }
    @Field(2)
    public int size() {
        return this.io.getIntField(this, 2);
    }
    @Field(2)
    public AVBPrint size(int size) {
        this.io.setIntField(this, 2, size);
        return this;
    }
    @Field(3)
    public int size_max() {
        return this.io.getIntField(this, 3);
    }
    @Field(3)
    public AVBPrint size_max(int size_max) {
        this.io.setIntField(this, 3, size_max);
        return this;
    }
    /** C type : char[1] */
    @Array({1})
    @Field(4)
    public Pointer<Byte > reserved_internal_buffer() {
        return this.io.getPointerField(this, 4);
    }
    /** C type : char[1024 - sizeof(ff_pad_helper_AVBPrint)] */
/*	@Array({1024 - new com.mutar.libav.bridge.avutil.ff_pad_helper_AVBPrint().size()})
    @Field(5)
    public Pointer<Byte > reserved_padding() {
        return this.io.getPointerField(this, 5);
    }*/
    public AVBPrint() {
        super();
    }
    public AVBPrint(Pointer pointer) {
        super(pointer);
    }
}
