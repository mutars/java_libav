package com.mutar.libav.bridge.avutil;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Union;
/**
 * <i>native declaration : ffmpeg_build/include/libavutil/intreadwrite.h:13</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Union 
@Library("avutil") 
public class av_alias32 extends StructObject {
	static {
		BridJ.register();
	}
	@Field(0) 
	public int u32() {
		return this.io.getIntField(this, 0);
	}
	@Field(0) 
	public av_alias32 u32(int u32) {
		this.io.setIntField(this, 0, u32);
		return this;
	}
	/** C type : uint16_t[2] */
	@Array({2}) 
	@Field(1) 
	public Pointer<Short > u16() {
		return this.io.getPointerField(this, 1);
	}
	/** C type : uint8_t[4] */
	@Array({4}) 
	@Field(2) 
	public Pointer<Byte > u8() {
		return this.io.getPointerField(this, 2);
	}
	@Field(3) 
	public float f32() {
		return this.io.getFloatField(this, 3);
	}
	@Field(3) 
	public av_alias32 f32(float f32) {
		this.io.setFloatField(this, 3, f32);
		return this;
	}
	public av_alias32() {
		super();
	}
	public av_alias32(Pointer pointer) {
		super(pointer);
	}
}
